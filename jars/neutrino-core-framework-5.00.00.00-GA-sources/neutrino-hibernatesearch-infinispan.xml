<?xml version="1.0" encoding="UTF-8"?>
<infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="urn:infinispan:config:9.2"
            xsi:schemaLocation="urn:infinispan:config:9.2 http://www.infinispan.org/schemas/infinispan-config-9.2.xsd">

    <!-- *************************** -->
    <!-- System-wide global settings -->
    <!-- *************************** -->
    <jgroups>
        <stack-file name="hibernateSearch-jgroups" path="neutrino-hibernatesearch-jgroups.xml"/>
    </jgroups>

    <cache-container name="HibernateSearch" statistics="false" default-cache="the-default-cache" shutdown-hook="REGISTER">
        <transport stack="hibernateSearch-jgroups" cluster="neutrino-hibernate-search-cluster"/>

        <!-- Duplicate domains are allowed so that multiple deployments with default configuration
            of Hibernate Search applications work - if possible it would be better to use JNDI to share
            the CacheManager across applications -->
        <jmx duplicate-domains="true"/>

		<local-cache name="the-default-cache" statistics="false" statistics-available="false">
			<eviction size="-1" strategy="NONE"/>
			<expiration max-idle="-1" interval="5000" lifespan="-1" />
			<locking  isolation="READ_COMMITTED" concurrency-level="1000" acquire-timeout="15000" striping="false" />
			<transaction mode="NONE" auto-commit="false" locking="OPTIMISTIC"  />
		</local-cache>

        <!-- *************************************** -->
        <!--  Cache to store Lucene's file metadata  -->
        <!-- *************************************** -->
         <replicated-cache name="LuceneIndexesMetadata" mode="SYNC" remote-timeout="120000">
            <state-transfer enabled="true" timeout="480000" await-initial-transfer="true"/>
            <locking isolation="READ_COMMITTED" concurrency-level="1000" acquire-timeout="20000" striping="false" write-skew="false"/>
            <transaction mode="NONE" auto-commit="false" locking="OPTIMISTIC"/>
            <eviction size="-1" strategy="NONE"/>
            <expiration max-idle="-1" interval="5000" lifespan="-1" />
            <indexing index="NONE"/>
            <partition-handling enabled="true" when-split="DENY_READ_WRITES" merge-policy="PREFERRED_ALWAYS"/>
            
			<persistence passivation="false">
               <file-store
			   shared="false" preload="true"
			   fetch-state="true"
			   read-only="false"
			   purge="false"
			   path="${L2.hib.search.metadata.location:target/HibernateSearchIndexes/LuceneIndexesMetadata/}">
			   </file-store>
            </persistence>
        </replicated-cache>

        <!-- **************************** -->
        <!--  Cache to store Lucene data  -->
        <!-- **************************** -->
        <replicated-cache name="LuceneIndexesData" mode="SYNC" remote-timeout="120000">
        	<state-transfer enabled="true" timeout="480000" await-initial-transfer="true"/>
            <locking isolation="READ_COMMITTED" concurrency-level="1000" acquire-timeout="20000" striping="false" write-skew="false"/>
            <transaction mode="NONE" auto-commit="false" locking="OPTIMISTIC"/>
            <eviction size="1000000" strategy="REMOVE"/>
            <expiration max-idle="-1" interval="5000" lifespan="-1" />
            <indexing index="NONE"/>
            <partition-handling enabled="true" when-split="DENY_READ_WRITES" merge-policy="PREFERRED_ALWAYS"/>
			
			<persistence passivation="false">
               <file-store
			   shared="false" preload="false"
			   fetch-state="true"
			   read-only="false"
			   purge="false"
			   path="${L2.hib.search.data.location:target/HibernateSearchIndexes/LuceneIndexesData/}">
			</file-store>
            </persistence>
        </replicated-cache>

        <!-- ***************************** -->
        <!--  Cache to store Lucene locks  -->
        <!-- ***************************** -->
		<local-cache name="LuceneIndexesLocking">
            <transaction mode="NONE"/>
         <expiration max-idle="-1" />
        </local-cache>
        
    </cache-container>

</infinispan>
