# if accessLog.jms.store.enabled=true then AccessLog messages will be pushed into JMS server.
# if accessLog.jms.store.enabled=false then AccessLog messages will be pushed on RDBMS or NoSQL database depending 
# on the flag accessLog.nosql.store.enabled.
accessLog.jms.store.enabled=false

# if accessLog.nosql.store.enabled=true then AccessLog messages will be saved on NoSQL database (like CouchDB).
# if accessLog.nosql.store.enabled=false then AccessLog messages will be saved on RDBMS database whose connection properties
# are defined as below.
# In case of 'true' : configure couch db connection properties into file : core-framework-config\couchDb-ektrop-config.properties).
accessLog.nosql.store.enabled=false

# NoSQL database properties
access.log.ektrop.couchdb.dbName=access_log_db

# Database connection properties.
acess.log.database.driver.class=${database.driver.class}
acess.log.database.connection.url=${database.connection.url}
acess.log.database.username=${database.username}
acess.log.database.password=${database.password}

acess.log.database.connection.pool.maxIdle=${database.connection.pool.maxIdle}
acess.log.database.connection.pool.maxActive=${database.connection.pool.maxActive}
acess.log.database.connection.pool.maxWait=${database.connection.pool.maxWait}
acess.log.database.connection.pool.removeAbandoned=${database.connection.pool.removeAbandoned}
acess.log.database.connection.pool.testWhileIdle=${database.connection.pool.testWhileIdle}
acess.log.database.connection.pool.validationQuery=${database.connection.pool.validationQuery}
acess.log.database.connection.pool.testOnBorrow=${database.connection.pool.testOnBorrow}

#Put 'oracle' for Oracle database and 'mysql' for MySQL database (case sensitive) and 'postgres' for postgres
acess.log.database.type=${database.type}

# JMS Message 
# JMS Server (ActiveMQ) properties
jmsConnectionFactory.brokerUrl=tcp://localhost:62610
jmsConnectionFactory.username=admin
jmsConnectionFactory.password=admin
access.log.activemq.tcp.max.connections=40
access.log.activemq.tcp.max.sessions.per.connections=200

#Channel and Adapter properties
jms.inbound.adapter.config.concurrentConsumers=10
jms.inbound.adapter.config.maxConcurrentConsumers=10
jms.message.polling.fixed.delay=5000
jms.message.polling.max.messages.per.poll=1


# Message Channel Properties
message.channel.queue.size=10000
message.channel.message.send.timeout=100
message.channel.poller.receive.timeout=0

# Message Aggregator Endpoint properties
aggregator.message.group.size=4000
aggregator.message.endpoint.send.timeout=100
aggregator.message.endpoint.group.timeout=5000
aggregator.message.endpoint.poller.fixedDelay=5000
aggregator.message.endpoint.poller.maxMessages.per.poll=4000

#Poller task executor config
aggregator.message.endpoint.poller.executor.keepAlive.time=1
aggregator.message.endpoint.poller.executor.queueCapacity=200
aggregator.message.endpoint.poller.executor.pool.size=5

# When app-server-provided profile is used
access.log.database.dataSource.name=${database.dataSource.name}

